{"version":3,"file":"str.min.js","sources":["../src/methods/trim.js","../src/methods/index.js","../src/methods/slugify.js","../src/methods/toLowerCase.js","../src/index.js"],"sourcesContent":["const trim = str =>\n  str\n    .replace(/^\\s+/, '')\n    .replace(/\\s+$/, '')\n\nexport default trim\n","// import camelCase from './camelcase'\nimport slugify from './slugify'\nimport toLowerCase from './toLowerCase'\nimport trim from './trim'\n\nexport default {\n  // camelCase,\n  slugify,\n  toLowerCase,\n  trim\n}\n","import trim from './trim'\n\nconst slugify = (str, sep = '-') =>\n  trim(str)\n    .toLowerCase()\n    .replace(/ /g, sep) // Cambio espacios por el separador\n    .normalize('NFD') // Quito todas las tildes\n    .replace(/[\\u0300-\\u036f]/g, '')\n\nexport default slugify\n","export default str => str.toLowerCase()\n","// import 'core-js'\n// import '@babel/polyfill'\nimport functions from './methods'\n\nclass Str {\n  constructor (value) {\n    this._value = value\n\n    Object.keys(functions).map(f => {\n      this[f] = function () {\n        this._value = functions[f](this._value)\n        return this\n      }\n    })\n  }\n\n  get value () {\n    return this._value\n  }\n}\n\nfunction str (value) {\n  return new Str(value)\n}\n\n// const compose = (...fns) =>\n//   fns.reduceRight((prevFn, nextFn) =>\n//     (...args) => nextFn(prevFn(...args)),\n//   value => value\n//   )\n\nexport default str\n"],"names":["trim","str","replace","slugify","sep","toLowerCase","normalize","Str","constructor","value","_value","Object","keys","functions","map","f","this"],"mappings":"yLAAA,MAAMA,EAAOC,GACXA,EACGC,QAAQ,OAAQ,IAChBA,QAAQ,OAAQ,UCEN,CAEbC,QCLc,CAACF,EAAKG,EAAM,MAC1BJ,EAAKC,GACFI,cACAH,QAAQ,KAAME,GACdE,UAAU,OACVJ,QAAQ,mBAAoB,IDC/BG,YERaJ,GAAOA,EAAII,cFSxBL,KAAAA,GGLF,MAAMO,EACJC,YAAaC,QACNC,OAASD,EAEdE,OAAOC,KAAKC,GAAWC,IAAIC,SACpBA,GAAK,uBACHL,OAASG,EAAUE,GAAGC,KAAKN,QACzBM,2BAMJA,KAAKN,eAIhB,SAAcD,UACL,IAAIF,EAAIE"}